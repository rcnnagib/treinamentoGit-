  310  cd treinamentos/
  311  mkdir github
  312  cd github/
  313  mkdir todolist
  314  mkdir teste
  315  cd teste/
  316  git init
  317  ls
  318  echo a > a.txt
  319  echo b > b.txt
  320  ls
  321  git commit
  322  git status
  323  git add -A
  324  git status
  325  git commit -m "a.txt e b.txt"
  326  git status
  327  echo c > c.txt
  328  git status
  329  git add -A
  330  git commit -m "c.txt"
  331  echo c2 > c.txt
  332*
  333  git status
  334  git add -A
  335  git status
  336  git commit -m "alterando c.txt"
  337  mv c.txt c2.txt
  338  git status
  339  git add -A
  340  git commit -m "renomeado c.txt para c2.txt"
  341  git log oneline
  342  git log --oneline
  343  echo cat history > historico.txt
  344  ls
  345  vi historico.txt
  346  history
  347  git branch
  348  git branch feature1
  349  git branch
  350  cat .git/refs/heads/master
  351  cat .git/refs/heads/feature1
  352  git log --oneline --deorate
  353  git log --oneline --decorate
  354  cat .git/HEAD
  355  git checkout feature1
  356  cat .git/HEAD
  357  echo d > d.txt
  358  git add -A
  359  git commit -m d.txt
  360  git status
  361  git log --oneline --decorate
  362  ls -la
  363  git checkout master
  364  ls -la
  365  git log --oneline --decorate
  366  git log --oneline --decorate --all
  367  git checkout master
  368  git merge feature1
  369  git log --oneline --decorate --all
  370  git branch-d feature1
  371  git branch -d feature1
  372  git log --oneline --decorate --all
  373  git branch feature2
  374  git checkout feature2
  375  echo e > e.txt
  376  git add -A
  377  git status
  378  git commit -m "e.txt"
  379  git log --oneline --decorate --all
  380  git log --oneline --decorate --all --graph
  381  git checkout master
  382  echo f > f.txt
  383  git add -A
  384  git commit -m "f.txt"
  385  git log --oneline --decorate --all --graph
  386  git merge feature2
  387  git branch -d feature2
  388  git checkout -b feature3
  389  echo g2 > g.txt
  390  git add -A
  391  git commit -m "g.txt"
  392  git checkout master
  393  echo g1 > g.txt
  394  git add -A
  395  git commit -m "g.txt"
  396  git merge feature3
  397  vi g.txt
  398  git add -A
  399  git commit -m "g.txt"
  400  git branch -d feature3
  401  git log --oneline --decorate --all --graph
  402  history
  403  git checkout -b feature4
  404  echo h > h.txt
  405  git add -A
  406  git status
  407  git stash save "h.txt"
  408  git status
  409  git stash list
  410  git stash apply stash@{0}
  411  git stash drop stash@{0}
  412  git stash save "h.txt"
  413  git stash pop "h.txt"
  414  git stash pop
  415  git stash list
  416  git status
  417  git stash save "h.txt"
  418  git stash branch feature5
  419  git status
  420  git add -A
  421  git commit -m "incluido arquivo de historico"
  422  git status
  423  git push
  424  git remote add origin https://github.com/rcnnagib/treinamentoGit-.git
  425  git remote
  426  git remote -v
  427  git push origin master
  428  git pull origin master
  429  git clone https://github.com/rcnnagib/treinamentoGit-.git treinamentoGit2
  430  cd ..
  431  cd teste
  432  cd treinamentoGit2/
  433  echo h > h.txt
  434  git add -A
  435  git commit -m "h.txt"
  436  git push origin master
  437  cd ...
  438  pwd
  439  cd ..
  440  pwd
  441  git pull origin master
  442  git pull origin master
  443  git log --online --decorate --all --graph
  444  git log --oneline --decorate --all --graph
  445  git log --oneline --decorate --all --graph